/* ******************************************************************** **
** @@ Memory Mapped File
** @  Copyrt : 
** @  Author : 
** @  Modify :
** @  Update : 
** @  Dscr   :
** ******************************************************************** */

#ifndef _MMF_HPP_
#define _MMF_HPP_

#if _MSC_VER > 1000
#pragma once
#endif

/* ******************************************************************** **
** @@                   internal defines
** ******************************************************************** */

/* ******************************************************************** **
** @@                   internal prototypes
** ******************************************************************** */

/* ******************************************************************** **
** @@                   external global variables
** ******************************************************************** */

/* ******************************************************************** **
** @@                   static global variables
** ******************************************************************** */

/* ******************************************************************** **
** @@                   Classes
** ******************************************************************** */

/* ******************************************************************** **
** @@ class MMF
** @  Copyrt : 
** @  Author : 
** @  Modify :
** @  Update : 
** @  Dscr   :
** ******************************************************************** */

class MMF
{
   private:

      HANDLE                  _hFile;
      HANDLE                  _hMap;
      DWORD                   _dwSizeHi;
      DWORD                   _dwSizeLo;
      LPVOID                  _pView;
      bool                    _bReadOnly;
      bool                    _bOpen;

   public:

               MMF();
      virtual ~MMF();

      bool     OpenReadOnly (const char* const pszFileName);
      bool     OpenReadWrite(const char* const pszFileName);
      bool     IsOpen();
      bool     Close();
      bool     Flush();
      BYTE*    Buffer();
      DWORD    Size();
};

#endif

/* ******************************************************************** **
** @@                   The End
** ******************************************************************** */
